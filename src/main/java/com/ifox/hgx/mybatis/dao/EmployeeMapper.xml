<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ifox.hgx.mybatis.dao.EmployeeMapper">
<!--
    namespace:名称空间,指定为接口的全类名
    resultType:返回类型
    id:唯一标识

    Employee getEmpById(Integer id) ;
-->
    <!--select id,last_name lastName,email,gender from tab_employee where id = #{id}
       开启动驼峰命名规则（camel case）映射-->
    <!--使用别名:com.ifox.hgx.mybatis.entities.Employee <=== employee -->
    <select id="getEmpById" resultType="employee">
           select * from tab_employee where id = #{id}
    </select>

    <!--增加 parameterType可省略-->
    <insert id="addEmp" parameterType="com.ifox.hgx.mybatis.entities.Employee"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tab_employee(last_name, gender, email) VALUES(#{lastName},#{gender},#{email,jdbcType=NULL})
    </insert>

    <!--更新-->
    <update id="updateEmp">
        UPDATE tab_employee SET last_name=#{lastName},email=#{email},gender=#{gender} WHERE  id = #{id}
    </update>

    <!--删除-->
    <delete id="deleteEmpById">
        DELETE FROM tab_employee WHERE id = #{id}
    </delete>

    <!--通过id和lastName查询-->

    <select id="getEmpByIDAndName" resultType="employee">
        SELECT * FROM ${tableName} WHERE id=#{id} AND last_name=#{lastName}
    </select>

    <!--通过lastName查询 返回Employee集合-->
    <select id="getEmpsByLastName" resultType="employee">
        SELECT * FROM tab_employee WHERE last_name LIKE #{lastName}
    </select>

    <!---->
    <select id="getEmpByIdReturnMap" resultType="map">
        SELECT * FROM tab_employee WHERE id=#{id}
    </select>

    <select id="getEmpByLastNameReturnMap" resultType="employee">
        SELECT * FROM tab_employee WHERE last_name LIKE #{lastName}
    </select>
</mapper>